<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="joinMapper">

	<!-- 1 : 1 의 관계 데이터를 매핑해주는 Map -->
	<resultMap type="commentbDTO" id="assocoationMap">
		<id column="comment_No" property="commentNo"/>
		<result column="user_id" property="userId"/>
		<result column="comment_content" property="commentContent"/>
		<result column="reg_date" property="regDate"/>
		
		<association property="users" javaType="userDTO">
			<id column="user_id" property="userId"/>
			<result column="user_name" property="userName"/>
		</association>
		
	</resultMap>
	
	<!-- 1 : 다 의 관계 데이터를 매핑해주는 Map -->
	<resultMap type="commentbDTO" id="collectionMap">
		<id column="comment_no" property="commentNo"/>
		<result column="user_id" property="userId"/>
		<result column="comment_content" property="commentContent"/>
		<result column="reg_date" property="regDate"/>
		
		<collection property="replies" ofType="replyDTO">
			<id column="reply_no" property="replyNo"/>
			<result column="comment_no" property="commentNo"/>
			<result column="user_id" property="userId"/>
			<result column="reply_content" property="replyContent"/>
			<result column="reg_date" property="regDate"/>
		</collection>
		
	</resultMap>
	
	<!-- 아이디에 해당하는 모든 게시물 -->
	<resultMap type="userDTO" id="userCollectionMap">
		<id column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
		
		<collection property="commentbList" ofType="commentbDTO">
			<id column="comment_no" property="commentNo"/>
			<result column="user_Id" property="userId"/>
			<result column="comment_content" property="commentContent"/>
			<result column="reg_date" property="regDate"/>
		</collection>
		
	</resultMap>
	
	<!-- 
		1:1의 관계 문제1) 한개의 Comment는 한명의 작성자 정보를 가진다.
		게시물의 정보와 함께 작성자 정보를 함께 검색하고 싶다.
	 -->
	<select id="joinAssociation" resultMap="assocoationMap">
		SELECT c.comment_No, c.user_id, u.user_name, c.comment_Content, c.reg_Date
		FROM commentb c JOIN users u
		ON c.user_id = u.user_id
	</select>
	
	<!-- 
		1 : 다인 경우 - 하나의 게시물에 댓글 여러개 작성할 수 있다.
	 -->
	 <select id="joinCollection" resultMap="collectionMap">
		SELECT c.comment_no, c.user_id, c.comment_Content, 
		r.reply_no, r.reply_content,r.user_id, r.reg_date
		FROM commentB c JOIN reply r
		ON c.comment_no = r.comment_no
	 </select>
	
	<!-- 
		아이디에 해당하는 사람이 작성한 모든 게시물정보 검색하기(user정보 + 게시물정보)
	 -->
	<select id="userCollection" parameterType="string" resultMap="userCollectionMap">
	 	select user_id, user_name, comment_no, comment_content, reg_date
	 	from users join commentb
	 	using(user_id)
		<where>
	 		<if test="_parameter!=null">
	 			user_id=#{_parameter}
	 		</if>
	 	</where>
	</select>
	 
	 
</mapper>